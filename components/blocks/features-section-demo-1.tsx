import React from "react";
import { useId } from "react";

export default function FeaturesSectionDemo() {
  return (
    <div className="py-20 lg:py-40">
      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-10 md:gap-2 max-w-7xl mx-auto">
        {grid.map((feature) => (
          <div
            key={feature.title}
            className="relative bg-gradient-to-b dark:from-neutral-900 from-neutral-100 dark:to-neutral-950 to-white p-6 rounded-3xl overflow-hidden"
          >
            <Grid size={20} />
            <p className="text-base font-bold text-neutral-800 dark:text-white relative z-20">
              {feature.title}
            </p>
            <p className="text-neutral-600 dark:text-neutral-400 mt-4 text-base font-normal relative z-20">
              {feature.description}
            </p>
          </div>
        ))}
      </div>
    </div>
  );
}

const grid = [
  {
    title: "DevSecOps Integration",
    description: "Seamlessly integrate security practices into your development pipeline, ensuring robust protection from code to deployment."
  },
  {
    title: "Cloud Security Solutions",
    description: "Implement comprehensive security measures for AWS, GCP, and Azure environments, safeguarding your cloud infrastructure."
  },
  {
    title: "Threat Intelligence & Management",
    description: "Proactively identify and mitigate potential threats using advanced analytics and real-time monitoring systems."
  },
  {
    title: "Incident Response Planning",
    description: "Develop and implement robust incident response strategies to minimize damage and ensure rapid recovery from security breaches."
  },
  {
    title: "Security Information and Event Management (SIEM)",
    description: "Deploy cutting-edge SIEM solutions for real-time analysis of security alerts generated by applications and network hardware."
  },
  {
    title: "Penetration Testing & Vulnerability Assessment",
    description: "Conduct thorough penetration tests and vulnerability assessments to identify and address potential security weaknesses."
  },
  {
    title: "Compliance & Risk Management",
    description: "Ensure adherence to industry standards and regulations (HIPAA, SOC2, GDPR) while effectively managing and mitigating cybersecurity risks."
  },
  {
    title: "Security Awareness Training",
    description: "Empower your team with comprehensive cybersecurity training programs, fostering a culture of security awareness throughout your organization."
  },
  {
    title: "Network Security Optimization",
    description: "Enhance your network's defenses with advanced firewalls, intrusion detection systems, and secure network architectures."
  },
  {
    title: "Identity and Access Management (IAM)",
    description: "Implement robust IAM solutions to ensure secure, efficient, and compliant user access across your digital ecosystem."
  },
  {
    title: "Secure Code Review & Application Security",
    description: "Conduct in-depth code reviews and implement security best practices in application development to prevent vulnerabilities."
  },
  {
    title: "Cyber Forensics & Incident Analysis",
    description: "Utilize advanced forensic techniques to investigate security incidents, determine root causes, and prevent future occurrences."
  },
  {
    title: "Zero Trust Architecture Implementation",
    description: "Design and deploy Zero Trust security models to enhance your organization's security posture in the modern digital landscape."
  },
  {
    title: "IoT Security Solutions",
    description: "Secure your Internet of Things (IoT) devices and networks with tailored security measures to protect against emerging threats."
  },
  {
    title: "Blockchain Security Consulting",
    description: "Provide expert guidance on securing blockchain implementations and smart contracts for financial and data integrity."
  },
  {
    title: "Continuous Security Monitoring",
    description: "Implement 24/7 security monitoring solutions to detect and respond to threats in real-time, ensuring constant protection."
  }
];


export const Grid = ({
  pattern,
  size,
}: {
  pattern?: number[][];
  size?: number;
}) => {
  const p = pattern ?? [
    [Math.floor(Math.random() * 4) + 7, Math.floor(Math.random() * 6) + 1],
    [Math.floor(Math.random() * 4) + 7, Math.floor(Math.random() * 6) + 1],
    [Math.floor(Math.random() * 4) + 7, Math.floor(Math.random() * 6) + 1],
    [Math.floor(Math.random() * 4) + 7, Math.floor(Math.random() * 6) + 1],
    [Math.floor(Math.random() * 4) + 7, Math.floor(Math.random() * 6) + 1],
  ];
  return (
    <div className="pointer-events-none absolute left-1/2 top-0  -ml-20 -mt-2 h-full w-full [mask-image:linear-gradient(white,transparent)]">
      <div className="absolute inset-0 bg-gradient-to-r  [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-zinc-900/30 from-zinc-100/30 to-zinc-300/30 dark:to-zinc-900/30 opacity-100">
        <GridPattern
          width={size ?? 20}
          height={size ?? 20}
          x="-12"
          y="4"
          squares={p}
          className="absolute inset-0 h-full w-full  mix-blend-overlay dark:fill-white/10 dark:stroke-white/10 stroke-black/10 fill-black/10"
        />
      </div>
    </div>
  );
};

export function GridPattern({ width, height, x, y, squares, ...props }: any) {
  const patternId = useId();

  return (
    <svg aria-hidden="true" {...props}>
      <defs>
        <pattern
          id={patternId}
          width={width}
          height={height}
          patternUnits="userSpaceOnUse"
          x={x}
          y={y}
        >
          <path d={`M.5 ${height}V.5H${width}`} fill="none" />
        </pattern>
      </defs>
      <rect
        width="100%"
        height="100%"
        strokeWidth={0}
        fill={`url(#${patternId})`}
      />
      {squares && (
        <svg x={x} y={y} className="overflow-visible">
          {squares.map(([x, y]: any) => (
            <rect
              strokeWidth="0"
              key={`${x}-${y}`}
              width={width + 1}
              height={height + 1}
              x={x * width}
              y={y * height}
            />
          ))}
        </svg>
      )}
    </svg>
  );
}
